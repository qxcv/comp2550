\documentclass[11pt]{article}
% Note: Steve doesn't use super or sort&compress (although AFAICT he does
% compress). Uses a mixture of citet and cite in-text. Having said that, he
% doesn't express a strong preference; some papers use all citep with no numeric
% citations!
\usepackage[super,square,comma,sort&compress]{natbib}
% Uncomment the following to get inline links to references.
\usepackage{hyperref}
\usepackage{multicol}
\usepackage[hmargin=0.5in,vmargin=0.8in]{geometry}

\begin{document}
    \title{A Survey of Map Matching Algorithms\\
    {\Large COMP2550 Literature Survey}}
    \author{Sam Toyer\\\texttt{u5568237@anu.edu.au}}
    \date{\today}

    \maketitle

    \abstract{
        Map matching is the process of taking a series of observations of a
        vehicle's environment---for instance, Global Positioning System (GPS)
        measurements of the vehicle's latitude and longitude, or the distance
        travelled by the vehicle's rear wheels in a fixed time period---and
        attempting to fit the path described by those observations onto a
        digital map. In this survey, we explore the current state-of-the-art in
        online map matching algorithms, and evaluate the reported efficacy and
        applicability of these algorithms to the problem of map matching on
        low-detail maps.
    }

\begin{multicols}{2}
    \section{Introduction}
        % XXX: I don't like how long-winded this is. Get to the point!
        % Also, since the entire point of this paragraph is to motivate the
        % problem, I should include examples of where map-matching is used, and
        % note that it is used in the specific computer vision application which
        % I wish to study.
        Whilst contemporary satellite-based navigation systems like GPS can be
        used to estimate the coordinates of a vehicle just about anywhere on the
        surface of the earth, the inaccuracy inherent in these systems can still
        be significant for some applications, especially in built-up areas:
        \citet{modsching2006field} report mean errors of up to 15m in some urban
        environments, for instance. For objects which are assumed to be on
        roadways, these errors can be dramatically reduced by considering the
        information present in freely available digital street maps like those
        produced by the OpenStreetMap\footnotemark project. The task of an
        online map matching algorithm is to take noisy or biased observations
        from a localisation or odometry system and attempt to find the most
        accurate projection of the object being tracked onto a given digital
        map.

        \footnotetext{\url{http://www.openstreetmap.org/}}

        For the purposes of this survey, we will divide map matching algorithms
        up into three categories: firstly, we will consider basic heuristic
        algorithms which employ simple geometric and topological features of the
        road network. Next, we will look at more sophisticated algorithms which
        take advantage of several such heuristics, either by using a simple
        weighting or through more complex methods like Dempster-Shafer theory
        and fuzzy logic. Finally, we will consider more advanced probabilistic
        algorithms, and give particular consideration to those which are capable
        of estimating the possible positions of a vehicle on several road
        segments at a time, or of localising the vehicle at the lane-level.

    \section{Basic heuristic algorithms}
        % Cover point-to-point, point-to-curve, curve-to-curve, and possibly
        % some other methods. Just really basic turn-of-the-century stuff.
        Initial solutions to the map matching problem used simple geometric
        methods which only considered the position of the vehicle relative to
        the road segments making up a digital map. Later algorithms also took
        into account the topology of the road graph and the location history of
        the vehicle to try and match the ``shape'' of the vehicle's path to the
        map. Whilst these approaches offer mediocre performance on their
        own\cite{quddus2007current}, we nonetheless consider some of them in
        this section, as they form the basis for many of the more advanced
        algorithms which constitute the state-of-the-art today.

        \citet{white2000some} offer an excellent summary of several such basic
        algorithms, and we will briefly summarise two of them here.

        The first algorithm \citet{white2000some} consider, dubbed
        \textit{point-to-curve matching}, simply finds the nearest road segment
        in a digital map and calculates the orthogonal projection of the most
        recent GPS measurement onto that segment. As the authors point out, this
        algorithm not only fails to make use of historical data, vehicle
        heading, vehicle velocity, topological information and so on, but also
        results in a highly unstable output at intersections, where the reported
        GPS reading may be approximately equidistant to two or more road
        segments.

        As a result of the deficiencies in this algorithm, the authors propose
        two augmentations of it. The first considers the difference between the
        vehicle's heading and the alignment of the given street segments, and
        discards segments with too great a difference between the vehicle's
        heading and the segment's orientation. The second defines ``nearby''
        roads by their driving distance along the map from the current estimated
        vehicle position, rather than by their straight-line distance from the
        most recent GPS reading.
        % TODO: Be more critical of above.

        The final algorithm \citet{white2000some} consider,
        \textit{curve-to-curve matching}, attempts to incorporate both
        historical position data and map topology. It begins by constructing a
        piecewise linear curve from the $n$ most recent GPS measurements for the
        vehicle. It then locates nodes in the road graph within a certain
        distance of the most recent GPS measurement. For each of these nodes, it
        constructs additional piecewise linear curves of the same length as that
        produced from the vehicle's positioning history, each of which follow
        the road network outwards from the node in question. Finally, it
        considers the area between each of the curves on the map and
        the curve representing the vehicle's path, and selects the curve with
        the lowest such area. The output of the algorithm is a projection of the
        vehicle's current GPS position onto the best curve.

        % TODO: Document performance, mention that the algorithm is nonetheless
        % used in later approaches.
        % In a limited evaluation of their various approaches to map matching over
        % routes of 170--600m, \citet{white2000some} report that point-to-curve
        % matching and curve-to-curve matching achieve middling results, as
        % illustrated in Table~\ref{tab:comparison}. Nonetheless

    \section{Combining multiple heuristics}
        % This section: algorithms using a weighting of heuristics, or merging
        % heuristics together using DS theory or fuzzy logic (there are *many*
        % such localisation systems)
        Heuristics like those mentioned in the previous section can be combined
        using a number of schemes to produce improved map-matching algorithms.
        These more advanced algorithms typically follow a three-step process:

        \begin{enumerate}
            \item Firstly, the algorithm estimates the vehicle's global position.
            This estimate can come directly from a GPS sensor, but it is often
            worthwhile to smooth out raw GPS data using an Extended Kalman
            Filter (EKF), as described in XXX. This generally requires access to
            vehicle odometry data.
            \item Next, the algorithm attempts to find the specific road
            segment which the vehicle is travelling on.
            \item Finally, the algorithm produces a best guess as to where the
            vehicle is within the road segment.
        \end{enumerate}

        % Things I'll mention here:
        %  - One or two examples of manually weighted heuristic approaches.
        %  Probably Ochieng et. al. and the paper Jose put on the project page.
        %  Possibly use Velaga et. al.'s 2009 paper instead of Ochieng's since
        %  that's more recent.
        %  - One or two examples of DS theory
        %  - One or two examples of fuzzy logic

        Fuzzy logic is another commonly used method of incorporating multiple
        heuristics for map matching. The basic building-block of fuzzy logic is
        the fuzzy set. % XXX TODO

        \citet{ren2012fuzzy} implement a fuzzy logic-based system for localising
        an electric wheelchair on a network of footpaths. Their filtering
        algorithm operates in one of two modes: when believed to be travelling
        along a particular segment, their algorithm uses point-to-curve matching
        to localise the wheelchair. When near a junction, or when the heading of
        the vehicle differs greatly from that of the footpath segment which the
        vehicle is believed to be on, the system iterates through all nearby
        footpath links and applies a four rule fuzzy inference system to select
        the most promising link. Despite using only GPS information and the data
        in a simple digital map as their algorithm inputs, they manage to locate
        the correct link 87--94\% of time time, although they do not provide
        information on positional error.

        % XXX: Need to define EKFs beforehand
        % Also, should  talk about limitations of their technique
        \citet{quddus2006high} propose a more effective, but significantly more
        complex, fuzzy-logic based method which merges odometry, heading
        information, connectivity, and GPS fixes smoothed using an EKF. Their
        link detection mechanism operates in one of three modes: one for
        determining the initial link when no map-matched positions are
        available, one for determining subsequent links when travelling between
        junctions, and one for determining subsequent links at junctions. Each
        of these modes uses a separate set of fuzzy inference rules, which take
        into account GPS precision as reported by the receiver, the vehicle's
        speed, heading and position relative to the link, distance and direction
        to the nearest junction, and the vehicle's change in heading over time.
        The authors report a correct link identification rate of 99.2\% using
        this algorithm, as noted in Table~\ref{tab:comparison}.

        \citet{quddus2006high} also utilise a slightly more sophisticated method
        for determining the location of a vehicle within a specific link. First,
        they perform point-to-curve matching to produce one estimate of the
        vehicle's position. Next, they use vehicle's previously estimated
        position on the link, its speed and the heading of the link to provide
        another position estimate. These two estimates are then merged to
        produce a final estimate by weighting them according to their
        approximate variance.

    \section{Probabilistic methods}
        % Things I'll mention here:
        %  - Thiebaux and Lamb (possibly; low priority because it's a primitive
        %    method). If I don't include this, I will feel sad that there was
        %    nobody pointing out that we can treat the road network as a HMM :(
        %  - A couple of particle filter approaches. I feel that the EMap work
        %    is particularly relevant here because it shows what can be done
        %    with more accurate maps.
        %  - The GMM approach from Lost!

    \section{Quantitative comparison of results}

    \section{Conclusion}

    % I especially want to write about multi-hypothesis methods, where we're not
    % entirely sure what segment we're on, so we maintain a probability
    % distribution over segments (or a segment-independent probability
    % distribution over vehicle states), as opposed to the traditional method
    % where we select a promising segment and localise on it.

    \citet{white2000some}
    % XXX: Just there so that references show up. Delete later.

    \bibliography{citations}{}
    \bibliographystyle{abbrvnat}
\end{multicols}
\end{document}
