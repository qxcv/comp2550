\documentclass[10pt,twocolumn]{article}

\usepackage{hyperref}
\usepackage[round]{natbib}
\usepackage[hmargin=1in,vmargin=1in]{geometry}

% Should be around two pages. Things this needs:

% 1) Title
% 2) Research question
% 3) Some background and related work (shorter than literature review)
% 4) Technical details on how I'll proceed with the project
% 5) Project plan with milestones

% Will be assessed against Heilmeier's Catechism. Specifically:

% 1. What are you trying to do? Articulate your objectives using no jargon.
% 2. How is it done today, and what are the limits of current practice?
% 3. What’s new in your approach and why do you think it will be successful?
% 4. Who cares?
% 5. If you’re successful, what difference will it make?
% 6. What are the risks and the payoffs?
% 7. ~~~How much will it cost?~~~ (not relevant)
% 8. How long will it take?
% 9. What are the midterm and final “exams” to check for success?

% At the moment I'm thinking of doing something like "graphical models for map
% matching", and just dropping any pretence that this project has anything to do
% with CV. I think Jose would be fine with this, and he was the one who suggest
% GMs, so this might be a good option given that I'm quite pressed for time.
% However, I don't think GTSAM (his suggested approach) will work for this,
% since it seems to require users to represent constraints as "measurements"
% to or from some fixed point, with a noise model associated with each
% measurement. It obviously makes no sense to talk about noise for a map
% measurement, so this approach does not help.

% Project idea: real-time map matching using graphical models. Could use a HMM
% like the one in Newson & Krum (think they were the authors?), but adapt it to
% work in real time with sliding window and Kalman filtering along links.

% Hmm, I don't think that will work well, since HMMs don't seem to be well-tuned
% to work on problems where you need state estimates in real time. A better
% alternative might be to adapt the GMM approach I saw in "Lost!" to work well
% with GPS signals (include global localisation information to bootstrap the
% sensor and correct errors, for instance). This would be quite a useful
% algorithm, because it could detect vehicle position without significant drift
% even in the absence of a GPS signal.

\begin{document}
    \title{Robust Localisation of a Vehicle on a Digital Map\\
    \Large COMP2550 Project Proposal}
    \author{Sam Toyer\\\texttt{u5568237@anu.edu.au}}
    \date{\today}

    \maketitle

    \section*{Overview}
        Localisation---the task of determining the position of an object
        relative to its environment---is a common problem in robotics and
        related fields. In outdoor environments, a common solution is to use a
        satellite-based navigation system like GPS, which is usually able to
        provide a latitude and longitude estimate within metres of the
        receiver's true position.

        However, in some applications---especially applications in areas where
        GPS reception is poor---GPS is not sufficient on its own, and other
        sources of information must be used to infer location. For road vehicle
        localisation, street maps are excellent for this purpose: since cars
        almost always travel on roads, raw GPS fixes can be snapped to the most
        likely true position of the vehicle on the road network in a process
        called map matching. With the recent availability of free, accurate maps
        from the OpenStreetMap\footnotemark~project, map matching has become an
        attractive technique for improving the performance of a wide range of
        localisation techniques.

        \footnotetext{\url{http://www.openstreetmap.org/}}

        The objective of this project is to develop a robust algorithm to
        estimate the position of a vehicle on a road network from GPS data and
        dead reckoning. The algorithm should maintain good performance even with
        patchy GPS reception, and should be able to be adapted to other
        localisation tasks---pedestrian localisation, for example---where use of
        digital maps could improve performance.

        Such an algorithm has a wide range of applications, ranging from
        improving the performance of visual road classifiers by providing
        improved prior information about the position of roads in the image
        \citep{alvarez2014combining} to assisting visually impaired people in
        navigating outdoors \citep{oh2004map}.

    \section*{Related work}
        % This is where we write about what is done today and what the limits of
        % current practice are.
        Map matching in vehicles---whereby a vehicle is localised under the
        condition that its localised position \emph{must} be on the road
        network---is a well studied problem with a range of preexisting
        solutions. The most dominant family of solutions in the map matching
        literature are heuristic methods which follow some variation on the
        following three-step structure:

        \begin{enumerate}
            \item Estimate the vehicle's position using GPS or dead-reckoning.
            \item Consider all of the ``segments'' in the digital map of the
            road network and choose the one which the vehicle seems most likely
            to be on given the current GPS fix and the previous map-matched
            segment.
            \item Estimate the position of the vehicle within the chosen
            segment.
        \end{enumerate}

        Approaches of this kind include those of \citet{ochieng2003map},
        \citet{velaga2009developing} and \citet{quddus2006high}. These
        algorithms can be highly accurate---for instance,
        \citeauthor{quddus2006high} report that they were able achieve a
        horizontal accuracy of 5.5m using an algorithm following the structure
        described above, which compares favourable with the 32m horizontal
        accuracy of naively matching to the nearest point on the road network

        One common weakness to these approaches is poor mismatch handling: since
        segments are usually selected recursively---with the algorithm only
        matching to segments adjacent to the previously matched one---an
        incorrectly selected road segment can cause subsequent road segments to
        be selected incorrectly. This is especially problematic for the first
        match which the algorithm performs, since it has no prior matching data,
        and has prompted algorithm designers to take special precautions like
        observing many GPS fixes before matching the first segment
        \citep{syed2004fuzzy}.

        Probabilistic algorithms are able to sidestep this problem by modelling
        vehicle position not as a single ``best guess'', but as a probability
        distribution over all possible vehicle states. Thus, when there are
        multiple sections of the road which the vehicle could plausibly be
        occupying, the algorithm will assign them each similar probability and
        converge on a segment later, rather than choosing one segment
        arbitrarily and suffering incorrect subsequent matches afterwards.

        The most common probabilistic approach to map matching is particle
        filtering, as exemplified by \citet{selloum2009lane} and
        \citet{chausse2005vehicle}. Particle filters approximate the
        distribution of possible vehicle positions using a large number of
        ``particles'', each of which represent one possible state of the
        vehicle. Initially, these particles are spread uniformly over the road
        network. Then, at each time step, the particle positions are updated
        according to observed vehicle motion, and each particle is assigned a
        weight reflecting how well it corresponds to GPS readings and other
        available data. The particles are then resampled to produce a new
        particle distribution which reflects these weights, after which the
        algorithm loops back to the particle position update stage. Over time,
        the position of the particles should converge to the true vehicle
        position.

        Particle filters are highly flexible, and can be adapted to work without
        GPS \citep{pf2002}, or in situations like pedestrian navigation where
        the true position of the localisation target is not guaranteed to
        coincide with that of a mapped feature like a road or footpath
        \citep{oh2004map}. However, most applications of particle filtering to
        vehicle localisation, including those of \citeauthor{selloum2009lane}
        and \citeauthor{chausse2005vehicle}, have used augmented GPS systems and
        high precision maps which are not widely available. As a result, a
        promising avenue of research---and in fact the one which this project
        will pursue---is to adapt particle filtering to perform well with
        commonly available street maps and regular GPS receivers.

    \section*{Technical approach}
        As mentioned above, we will % TODO

        % TODO: What data sets am I going to use? How am I going to measure
        % success?

    \section*{Project plan}
        % Here we formulate our 'midterm and final exams' to check for success
        % We also say how long the project will take, and what the risks and
        % payoffs are.
        \citet{newson2009hidden}

    \bibliography{citations}{}
    \bibliographystyle{abbrvnat}
\end{document}
